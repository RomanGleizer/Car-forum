@model CarForum.Models.Review
@using Microsoft.AspNetCore.Identity
@inject UserManager<CarForum.Models.User> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    ViewData["Title"] = "Подробности отзыва";
}

<div class="random-cars">
    <h3 class="details-review-header">Подробное описание отзыва про @Model.CarBrand @Model.CarModel</h3>

    <ul class="random-cars-revies" id="userReviewsList">
        <li style="display: block; text-align: left;">
            <strong class="details-review-title">@Model.Title</strong>
            <p class="details-review-data" style="color: black;">Опубликовано: @Model.PublishTime.ToShortDateString()</p><br />
            <p class="details-review-data" style="color: black;">Рейтинг: @Model.Rating</p><br />
            <p class="details-review-data" style="color: black;">Год: @Model.Year</p><br />
            <p class="details-review-data" style="color: black;">Текущий пробег: @Model.Mileage км</p><br />
            <p class="details-review-data" style="color: black;">Коробка передач: @Model.Transmission</p><br />
            <p class="details-review-data" style="color: black;">Кузов: @Model.Body</p><br />
            <p class="details-review-data" style="color: black;">Тип двигателя: @Model.EngineType</p><br />
            <p class="details-review-data" style="color: black;">Объем двигателя: @Model.EngineCapacity</p><br />
            <p class="details-review-data" style="color: black;">Тип привода: @Model.DriveType</p><br />
            <p class="details-review-data" style="color: black;">Основные приемущества: @Model.Advantages</p><br />
            <p class="details-review-data" style="color: black;">Недостатки: @Model.Disadvantages</p><br />
            <p class="details-review-label" style="color: black;">Общие впечатления:</p><br />
            <div class="details-review-overall-experience">
                <span class="details-review-value">@Model.OverallExperience</span>
            </div>
            @if (!string.IsNullOrEmpty(Model.PhotoPath))
            {
                <div class="car-image-container">
                    <img class="car-image" src="@Url.Content(Model.PhotoPath)" alt="Фотография авто" />
                </div>
            }

            <div class="comments-section">

                @if (Model.Author.Id != currentUser.Id)
                {
                    <div class="add-comment-section">
                        <h4 style="display: block; text-align: center;">Добавить комментарий:</h4>
                        <form id="addCommentForm" asp-action="AddComment" asp-controller="Comment">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <textarea name="text" id="newCommentText" rows="3" required></textarea>
                            <button class="add-comment" type="submit">Добавить</button>
                        </form>
                    </div>
                }

                <h4 style="display: block; text-align: center;">Комментарии:</h4>
                <div id="commentListContainer">
                    @await Html.PartialAsync("_CommentListPartial", Tuple.Create((IEnumerable<Comment>)Model.Comments, (User)currentUser, (Review)Model))
                </div>
            </div>
        </li>
    </ul>
</div>
<script>
    $(function () {
        $("#addCommentForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.ajax({
                url: form.attr("action"),
                type: form.attr("method"),
                data: form.serialize(),
                success: function (data) {
                    $("#commentListContainer").html(data);
                    form.find("#newCommentText").val('');
                }
            });
        });
    });
</script>