@model CarForum.Models.Review
@using Microsoft.AspNetCore.Identity
@inject UserManager<CarForum.Models.User> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    ViewData["Title"] = "Подробности отзыва";
}

<div class="review-details">
    <h3 class="details-review-header">Подробное описание отзыва про @Model.CarBrand @Model.CarModel</h3>
    <strong class="details-review-title">@Model.Title</strong>
    <p class="details-review-data">Опубликовано: @Model.PublishTime.ToShortDateString()</p>
    <p class="details-review-data">Рейтинг: @Model.Rating</p>
    <p class="details-review-data">Год: @Model.Year</p>
    <p class="details-review-data">Текущий пробег: @Model.Mileage км</p>
    <p class="details-review-data">Коробка передач: @Model.Transmission</p>
    <p class="details-review-data">Кузов: @Model.Body</p>
    <p class="details-review-data">Тип двигателя: @Model.EngineType</p>
    <p class="details-review-data">Объем двигателя: @Model.EngineCapacity</p>
    <p class="details-review-data">Тип привода: @Model.DriveType</p>
    <p class="details-review-data">Основные приемущества: @Model.Advantages</p>
    <p class="details-review-data">Недостатки: @Model.Disadvantages</p>
    <p class="details-review-label">Общие впечатления:</p>
    <div class="details-review-overall-experience">
        <span class="details-review-value">@Model.OverallExperience</span>
    </div>
    @if (!string.IsNullOrEmpty(Model.PhotoPath))
    {
        <div class="car-image-container">
            <img class="car-image" src="@Url.Content(Model.PhotoPath)" alt="Фотография авто" />
        </div>
    }
    <div class="options">
        <a href="javascript:history.back()" class="more-info">Назад</a>
        @if (currentUser.Id == Model.AuthorId)
        {
            <a asp-action="EditReview" asp-controller="Review" asp-route-id="@Model.Id" class="review-edit">Редактировать</a>
            <a asp-action="Delete" asp-controller="Review" asp-route-id="@Model.Id" class="review-edit">Удалить</a>
        }
    </div>

    <div class="comments-section">

        @if (Model.Author.Id != currentUser.Id)
        {
            <div class="add-comment-section">
                <h4>Добавить комментарий:</h4>
                <form id="addCommentForm" asp-action="AddComment" asp-controller="Comment">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <textarea name="text" id="newCommentText" rows="3" required></textarea>
                    <button class="add-comment" type="submit">Добавить</button>
                </form>
            </div>
        }

        <h4>Комментарии:</h4>
        <div id="commentListContainer">
            @await Html.PartialAsync("_CommentListPartial", Tuple.Create((IEnumerable<Comment>)Model.Comments, (User)currentUser, (Review)Model))
        </div>
    </div>
</div>
<script>
    $(function () {
        $("#addCommentForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            $.ajax({
                url: form.attr("action"),
                type: form.attr("method"),
                data: form.serialize(),
                success: function (data) {
                    $("#commentListContainer").html(data);
                    form.find("#newCommentText").val('');
                }
            });
        });
    });
</script>