@model CarForum.ViewModels.CreateReviewViewModel

@{
    ViewData["Title"] = "Создать отзыв";
}

<div class="create-review">
    <h4 class="create-review-text">Создать отзыв</h4>
    <form class="review-form" asp-action="CreateReview" asp-controller="Review" method="post" enctype="multipart/form-data">

        <div class="form-group">
            <label asp-for="Title" class="form-group-label"></label>
            <div class="form-group-input">
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Rating" class="form-group-label"></label>
            <div class="form-group-input">
                <input asp-for="Rating" class="form-control" type="number" min="1" max="5" />
                <span asp-validation-for="Rating" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="CarBrand" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="brand" asp-for="CarBrand" class="form-control"></select>
                <span asp-validation-for="CarBrand" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="CarModel" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="model" asp-for="CarModel" class="form-control"></select>
                <span asp-validation-for="CarModel" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Transmission" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="transmission_types" asp-for="Transmission" class="form-control"></select>
                <span asp-validation-for="Transmission" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Body" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="body_types" asp-for="Body" class="form-control"></select>
                <span asp-validation-for="Body" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="EngineType" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="engine_types" asp-for="EngineType" class="form-control"></select>
                <span asp-validation-for="EngineType" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="DriveType" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="drive_types" asp-for="DriveType" class="form-control"></select>
                <span asp-validation-for="DriveType" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="EngineCapacity" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="engine_capacity" asp-for="EngineCapacity" class="form-control"></select>
                <span asp-validation-for="EngineCapacity" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Year" class="form-group-label"></label>
            <div class="form-group-input">
                <select id="year" asp-for="Year" class="form-control"></select>
                <span asp-validation-for="Year" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Mileage" class="form-group-label"></label>
            <div class="form-group-input">
                <input asp-for="Mileage" class="form-control" />
                <span asp-validation-for="Mileage" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Advantages" class="form-group-label"></label>
            <div class="form-group-input">
                <textarea asp-for="Advantages" class="form-control"></textarea>
                <span asp-validation-for="Advantages" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Disadvantages" class="form-group-label"></label>
            <div class="form-group-input">
                <textarea asp-for="Disadvantages" class="form-control"></textarea>
                <span asp-validation-for="Disadvantages" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="OverallExperience" class="form-group-label"></label>
            <div class="form-group-input">
                <textarea asp-for="OverallExperience" class="form-control form-group-big-textarea"></textarea>
                <span asp-validation-for="OverallExperience" class="text-danger form-group-span"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Photo" class="form-group-label"></label>
            <div class="form-group-input">
                <input asp-for="Photo" type="file" class="form-control-file" />
                <span asp-validation-for="Photo" class="text-danger form-group-span"></span>
            </div>
        </div>

        <button type="submit" class="publish-review">Создать отзыв</button>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    const brandSelect = document.getElementById("brand");
    const modelSelect = document.getElementById("model");
    const yearSelect = document.getElementById("year");
    const transmissionSelect = document.getElementById("transmission_types");
    const bodySelect = document.getElementById("body_types");
    const driveTypes = document.getElementById("drive_types");
    const engineTypes = document.getElementById("engine_types");
    const engineCapacity = document.getElementById("engine_capacity");

    const modelsDataPath = '/js/models.json';
    const brandsDataPath = '/js/brands.json';

    let selectedBrand;

    const loadJsonData = async (jsonPath) => {
        try {
            const response = await fetch(jsonPath);
            return await response.json();
        } catch (error) {
            console.error(`Error loading JSON data from ${jsonPath}:`, error);
            return null;
        }
    };

    const addOption = (select, value) => {
        if (select) {
            const option = document.createElement("option");
            option.value = value;
            option.text = value;
            select.add(option);
        }
    };

    const loadOptionsForSelect = async (select, jsonPath, key) => {
        const data = await loadJsonData(jsonPath);

        if (data) {
            select.innerHTML = "";
            data.forEach(item => {
                addOption(select, item[key]);
            });
        }
    };
    const updateModels = async (data) => {
        const selectedBrand = brandSelect.value;
        modelSelect.options.length = 0;

        const selectedBrandData = data[selectedBrand];

        if (selectedBrandData) {
            selectedBrandData.forEach(model => {
                addOption(modelSelect, model);
            });

            if (modelSelect.value !== "") {
                await loadYears();

                const transmissionData = await loadJsonData('/js/transmission_types.json');
                const bodyData = await loadJsonData('/js/body_types.json');
                const engineTypeData = await loadJsonData('/js/engine_types.json');
                const engineCapacityData = await loadJsonData('/js/engine_capacity.json');
                const driveTypeData = await loadJsonData('/js/drive_types.json');

                populateDropdown('transmission_types', transmissionData);
                populateDropdown('body_types', bodyData);
                populateDropdown('drive_types', driveTypeData);
                populateDropdown('engine_types', engineTypeData);
                populateDropdown('engine_capacity', engineCapacityData);
            }
        } else {
            modelSelect.options.length = 0;
            yearSelect.options.length = 0;
            transmissionSelect.options.length = 0;
            bodySelect.options.length = 0;
            driveTypes.options.length = 0;
            engineTypes.options.length = 0;
            engineCapacity.options.length = 0;
        }
    };

    const loadYears = async () => {
        const yearsJsonPath = '/js/years.json';
        const data = await loadJsonData(yearsJsonPath);

        if (data) {
            yearSelect.innerHTML = "";
            data.years.forEach(year => {
                addOption(yearSelect, year);
            });
        }
    };

    const fetchData = async () => {
        try {
            const brandsData = await loadJsonData(brandsDataPath);
            const modelsData = await loadJsonData(modelsDataPath);

            if (brandsData && modelsData && brandSelect) {
                brandsData.forEach(brand => {
                    addOption(brandSelect, brand.name);
                });

                brandSelect.addEventListener('change', async () => {
                    if (brandSelect.value !== selectedBrand) {
                        selectedBrand = brandSelect.value;
                        await updateModels(modelsData);
                    }
                });

                modelSelect.addEventListener('change', async () => {
                    await loadYears();
                });

                updateModels(modelsData);
            }
        } catch (error) {
            console.error(error);
        }
    };

    function populateDropdown(selectId, data) {
        const select = document.getElementById(selectId);

        data.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option.name;
            optionElement.textContent = option.name;
            select.appendChild(optionElement);
        });
    }

    fetchData();
</script>